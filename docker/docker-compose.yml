services:
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "6005:3000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-mypassword}@postgres-umami:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: replace-me-with-a-random-string
    depends_on:
      - postgres-umami
    init: true
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-umami:
    container_name: postgres-umami
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_UMAMI_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_UMAMI_PASSWORD:-mypassword}
      POSTGRES_DB: ${POSTGRES_DB:-umami}
      PGDATA: /data/postgres
    volumes:
       - postgres-umami:/data/postgres
    restart: unless-stopped

  postgres:
    container_name: postgres_forge
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    volumes:
      - ntfy:/var/cache/ntfy
      - ntfy-etc:/etc/ntfy
    ports:
      - 8010:80
    restart: unless-stopped

  master:
    image: chrislusf/seaweedfs:latest
    container_name: seaweedfs-master
    command: "master -ip=master -mdir=/data"
    ports:
      - "9333:9333"   # Master HTTP
      - "9324:9324"   # Master gRPC
    volumes:
      - seaweed_master:/data
    restart: unless-stopped

  volume:
    image: chrislusf/seaweedfs:latest
    container_name: seaweedfs-volume
    command: "volume -mserver=master:9333 -ip=volume -dir=/data -max=5"
    depends_on:
      - master
    ports:
      - "8080:8080"   # Volume HTTP (file upload/download)
      - "18080:18080" # Volume metrics
    volumes:
      - seaweed_volume:/data
    restart: unless-stopped

  filer:
    image: chrislusf/seaweedfs:latest
    container_name: seaweedfs-filer
    command: "filer -master=master:9333 -ip=filer"
    depends_on:
      - master
      - volume
    ports:
      - "8888:8888"   # Filer HTTP
    volumes:
      - seaweed_filer:/data
    restart: unless-stopped

  s3:
    image: chrislusf/seaweedfs:latest
    container_name: seaweedfs-s3
    command: "s3 -filer=filer:8888 -port=8333"
    depends_on:
      - master
      - volume
      - filer
    ports:
      - "8333:8333"   # S3 API endpoint
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-seaweedfs}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-seaweedfs_key}
    restart: unless-stopped

volumes:
    ntfy:
    ntfy-etc:
    postgres:
    postgres-umami:
    seaweed_master:
    seaweed_volume:
    seaweed_filer: